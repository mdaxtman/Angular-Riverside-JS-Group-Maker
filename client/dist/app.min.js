!function(){angular.module("groupMaker.config",[]).config(["$urlRouterProvider",function($urlRouterProvider){$urlRouterProvider.otherwise("/meetup")}])}(),function(){angular.module("groupMakerApp",["ui.router","groupMaker.config","meetup.config","meetup.controller","meetup.factory","eventsList.factory","event.config","event.controller","rsvp.factory","disable.directive"])}(),function(){angular.module("disable.directive",[]).directive("disableMember",function(){return{restrict:"A",scope:{assign:"=",profile:"="},link:function(scope,elem){elem.bind("dblclick",function(e){"disabled"===scope.profile.groupNumber?(scope.profile.groupNumber=0,scope.assign(!0)):scope.profile.groupNumber="disabled",elem.toggleClass("disabled")})}}})}(),function(){angular.module("event.config",[]).config(["$stateProvider",function($stateProvider){$stateProvider.state("meetup.event",{url:"/:eventId",controller:"eventCtrl",templateUrl:"../scripts/meetup/event/event.html",resolve:{rsvpList:["rsvpFactory","$stateParams",function(rsvpFactory,$stateParams){return rsvpFactory.getRsvps($stateParams.eventId)}]}})}])}(),function(){function sortByName(a,b){return a.name<b.name?-1:a.name>b.name?1:0}function sortBySkill(a,b){var left=parseInt(a.answers[0].answer),right=parseInt(b.answers[0].answer);return isNaN(left)&&(left=0),isNaN(right)&&(right=0),right-left!==0?right-left:sortByName(a,b)}function assignGroups(scope,num){var i,j,currentNumber,workFromFront,groupSize,len=scope.roster.length,numberOfGroups=num||parseInt(scope.numberOfGroups);if(num||(groupSize=parseInt(scope.groupSize)),groupSize)return assignGroups(scope,Math.ceil(len/groupSize));if(numberOfGroups)for(currentNumber=1,workFromFront=!0,i=0,j=len-1;j>=i;)workFromFront?(scope.roster[i].groupNumber&&"disabled"===scope.roster[i].groupNumber?i++:scope.roster[i++].groupNumber=currentNumber++,currentNumber>numberOfGroups&&(currentNumber=1,workFromFront=!1)):(scope.roster[j].groupNumber&&"disabled"===scope.roster[j].groupNumber?j--:scope.roster[j--].groupNumber=currentNumber++,currentNumber>numberOfGroups&&(currentNumber=1,workFromFront=!0))}function createGroups(scope){for(var len=scope.roster.length,groupSize=parseInt(scope.groupSize),number=""!==scope.numberOfGroups?scope.numberOfGroups:Math.ceil(len/groupSize),updatedRoster=[],updatedGroups={},i=1;number>=i;)updatedGroups[i++]=[];scope.roster.forEach(function(profile){"disabled"!==profile.groupNumber?updatedGroups[profile.groupNumber].push(profile):updatedRoster.push(profile)}),scope.roster=updatedRoster,scope.groups=updatedGroups}angular.module("event.controller",[]).controller("eventCtrl",["$scope","rsvpList",function($scope,rsvpList){$scope.roster=rsvpList,$scope.groups={},$scope.groupSize="",$scope.numberOfGroups="",$scope.button="Create Groups",$scope.sortByName=function(){$scope.roster.sort(sortByName)},$scope.sortBySkill=function(){$scope.roster.sort(sortBySkill)},$scope.resetSelect=function(arg){"size"===arg?$scope.numberOfGroups="":$scope.groupSize=""},$scope.assignGroups=function(assignOnlyDisabled){if("Create Groups"===$scope.button)""!==$scope.groupSize||$scope?(assignGroups($scope),createGroups($scope),$scope.button="Reset"):alert("please select a group size or number of Groups");else if(!assignOnlyDisabled){console.log("blah"),$scope.button="Create Groups";var resetRoster=[];for(var prop in $scope.groups)resetRoster=resetRoster.concat($scope.groups[prop]);$scope.roster=resetRoster.concat($scope.roster),$scope.groups={},$scope.sortBySkill()}},$scope.sortBySkill()}])}(),function(){angular.module("rsvp.factory",[]).factory("rsvpFactory",["$http","$q",function($http,$q){return{getRsvps:function(eventId){var memberListApiCall="https://api.meetup.com/2/profiles?group_urlname=RiversideJS&key=53e53186ab3be513c6e1a2d6b1e79&order=visited&desc=true&callback=JSON_CALLBACK",rsvpListApiCall="https://api.meetup.com/2/rsvps/?format=json&key=53e53186ab3be513c6e1a2d6b1e79&event_id="+eventId+"&sign=true&callback=JSON_CALLBACK",deferred=$q.defer();return $http.jsonp(rsvpListApiCall).success(function(r){var rsvpList=r.results,rsvpObject=rsvpList.reduce(function(obj,curr){return obj[curr.member.member_id]=curr.member.name,obj},{});$http.jsonp(memberListApiCall).success(function(d){var memberList=d.results,attending=memberList.filter(function(obj){return void 0!==rsvpObject[obj.member_id]?(obj.answers[0].answer=parseInt(obj.answers[0].answer),!0):void 0});deferred.resolve(attending)})}),deferred.promise}}}])}(),function(){angular.module("eventsList.factory",[]).factory("eventsListFactory",["$http",function($http){var upcomingEvents="https://api.meetup.com/2/events/?format=json&key=53e53186ab3be513c6e1a2d6b1e79&sign=true&group_urlname=RiversideJS&status=upcoming&desc=true&callback=JSON_CALLBACK";return $http.jsonp(upcomingEvents)}]).factory("pastEventsListFactory",["$http",function($http){var pastEvents="https://api.meetup.com/2/events/?format=json&key=53e53186ab3be513c6e1a2d6b1e79&sign=true&group_urlname=RiversideJS&status=past&desc=true&callback=JSON_CALLBACK";return $http.jsonp(pastEvents)}])}(),function(){angular.module("meetup.config",[]).config(["$stateProvider",function($stateProvider){$stateProvider.state("meetup",{url:"/meetup",controller:"meetupCtrl",templateUrl:"../scripts/meetup/meetup.html",resolve:{meetupData:["meetupFactory","$q",function(meetupFactory,$q){var deferred=$q.defer();return meetupFactory.success(function(result){deferred.resolve(result.data)}).error(function(error){deferred.reject(error)}),deferred.promise}],eventData:["eventsListFactory","pastEventsListFactory","$q",function(eventsListFactory,pastEventsListFactory,$q){var deferred=$q.defer();return eventsListFactory.success(function(data){data.results.length>0?deferred.resolve(data.results[0]):pastEventsListFactory.success(function(data){deferred.resolve(data.results[0])}).error(function(error){deferred.reject(error)})}).error(function(error){deferred.reject(error)}),deferred.promise}]}})}])}(),function(){angular.module("meetup.controller",[]).controller("meetupCtrl",["$scope","meetupData","eventData","$state",function($scope,meetupData,eventData,$state){$scope.logo=meetupData.group_photo.highres_link,$scope.title=meetupData.name,$scope.caption=eventData.name,$state.go("meetup.event",{eventId:eventData.id})}])}(),function(){angular.module("meetup.factory",[]).factory("meetupFactory",["$http",function($http){var groupInfoUrl="https://api.meetup.com/riversidejs/?format=json&key=53e53186ab3be513c6e1a2d6b1e79&sign=true&callback=JSON_CALLBACK";return $http.jsonp(groupInfoUrl)}])}();